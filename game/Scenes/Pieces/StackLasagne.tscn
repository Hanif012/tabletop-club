[gd_scene load_steps=10 format=2]

[ext_resource path="res://sounds/chips/chip_stack_shuffle_sounds.tres" type="Resource" id=1]
[ext_resource path="res://sounds/cards/card_stack_orient_sounds.tres" type="Resource" id=2]
[ext_resource path="res://sounds/chips/chip_stack_add_sounds.tres" type="Resource" id=3]
[ext_resource path="res://sounds/chips/chip_stack_orient_sounds.tres" type="Resource" id=4]
[ext_resource path="res://sounds/cards/card_stack_shuffle_sounds.tres" type="Resource" id=5]
[ext_resource path="res://Scripts/Game/Pieces/StackLasagne.gd" type="Script" id=6]
[ext_resource path="res://sounds/cards/card_stack_add_sounds.tres" type="Resource" id=7]
[ext_resource path="res://sounds/cards/card_stack_remove_sounds.tres" type="Resource" id=8]
[ext_resource path="res://sounds/chips/chip_stack_remove_sounds.tres" type="Resource" id=9]

[node name="StackLasagne" type="RigidBody"]
mass = 0.01
contacts_reported = 1
contact_monitor = true
script = ExtResource( 6 )
__meta__ = {
"_editor_description_": "A stack is a piece that contains stackable pieces, one on top of another, and is a stackable piece itself.

The shape of the stack is determined by the first piece that enters the stack, and the stack automatically adjusts the height of the shape depending on the number of pieces in the stack.

A lasagne stack renders all of the pieces inside it."
}
collision_shape_path = NodePath("CollisionShape")
outline_mesh_path = NodePath("CollisionShape/OutlineMeshInstance")
card_add_sounds = ExtResource( 7 )
card_orient_sounds = ExtResource( 2 )
card_remove_sounds = ExtResource( 8 )
card_shuffle_sounds = ExtResource( 5 )
chip_add_sounds = ExtResource( 3 )
chip_orient_sounds = ExtResource( 4 )
chip_remove_sounds = ExtResource( 9 )
chip_shuffle_sounds = ExtResource( 1 )
pieces_path = NodePath("CollisionShape/Pieces")

[node name="CollisionShape" type="CollisionShape" parent="."]

[node name="Pieces" type="Spatial" parent="CollisionShape"]
__meta__ = {
"_editor_description_": "All of the pieces of the stack are put as children of this node, and are converted to MeshInstances."
}

[node name="OutlineMeshInstance" type="MeshInstance" parent="CollisionShape"]
skeleton = NodePath("")
